<?php

namespace app\modules\shop\controllers;

use app\models\Orders;
use app\models\OrdersSearch;
use app\models\Products;
use app\models\ProductsFeaturesValuesMap;
use app\models\ProductsSearch;
use app\models\Users;
use yii\base\Exception;
use yii\web\Controller;
use Yii;

/**
 * Product controller for the `shop` module
 */
class OrdersController extends Controller
{

    public function init()
    {
        parent::init();
        if (!Yii::$app->user->isGuest && Yii::$app->user->identity->role == Users::ROLE_ADMIN) {
            return true;
        }
    }

    public function beforeAction($action)
    {
        Yii::$app->request->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Renders the index view for the module
     * @return string
     */
    public function actionIndex()
    {
        $searchModel = new OrdersSearch();
        $dataProvider1 = $searchModel->searchNew(array_merge(Yii::$app->request->queryParams, ['status' => Orders::STATUS_CREATED]));
        $dataProvider2 = $searchModel->searchInProgress(array_merge(Yii::$app->request->queryParams, ['status' => Orders::STATUS_IN_PROGRESS]));
        $dataProvider3 = $searchModel->searchDone(array_merge(Yii::$app->request->queryParams, ['status' => Orders::STATUS_DONE]));
        $dataProvider4 = $searchModel->searchDone(array_merge(Yii::$app->request->queryParams, ['status' => Orders::STATUS_RETURNS]));

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider1' => $dataProvider1,
            'dataProvider2' => $dataProvider2,
            'dataProvider3' => $dataProvider3,
            'dataProvider4' => $dataProvider4,
        ]);
    }

    public function actionEdit() {
        $model = $this->loadModel();
        foreach (array_keys(Yii::$app->request->post('Orders')) as $key) {
            $model->{$key} = Yii::$app->request->post('Orders')[$key];
        }
        if ($model->save()) {
            return $this->redirect('/shop/orders/view?id=' . Yii::$app->request->get()['id']);
        }
        return $this->redirect('/');
    }

    public function actionView() {
        $model = $this->loadModel();
        return $this->render('view', [
            'model' => $model,
        ]);
    }


    private function loadModel() {
        if ($id = Yii::$app->request->get()['id']) {
            if ($model = Orders::findOne($id)) {
                return $model;
            }
        }
        throw new Exception('Товар не найден!');
    }
}
